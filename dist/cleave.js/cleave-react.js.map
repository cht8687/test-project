{"version":3,"sources":["../../src/cleave.js/cleave-react.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AAEb,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE7B,IAAI,gBAAgB,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;AAC/D,IAAI,aAAa,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;AACzD,IAAI,cAAc,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAC3D,IAAI,kBAAkB,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;AACnE,IAAI,IAAI,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACnC,IAAI,iBAAiB,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;;AAE9D,IAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC3B,qBAAiB,EAAE,6BAAY;AAC3B,YAAI,CAAC,IAAI,EAAE,CAAC;KACf;;AAED,6BAAyB,EAAE,mCAAU,SAAS,EAAE;AAC5C,YAAI,KAAK,GAAG,IAAI;YACZ,eAAe,GAAG,SAAS,CAAC,OAAO,CAAC,eAAe;YACnD,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC;;AAE/B,YAAI,QAAQ,EAAE;AACV,oBAAQ,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;;AAE/B,gBAAI,QAAQ,KAAK,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE;AACzC,qBAAK,CAAC,UAAU,CAAC,SAAS,GAAG,QAAQ,CAAC;AACtC,qBAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;aAC3B;SACJ;;;AAGD,YAAI,eAAe,IAAI,eAAe,KAAK,KAAK,CAAC,UAAU,CAAC,eAAe,EAAE;AACzE,iBAAK,CAAC,UAAU,CAAC,eAAe,GAAG,eAAe,CAAC;AACnD,iBAAK,CAAC,kBAAkB,EAAE,CAAC;AAC3B,iBAAK,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAC1C;KACJ;;AAED,mBAAe,EAAE,2BAAY;AACrB,YAAA,KAAK,GAAG,IAAI,CAAA;2BACwC,KAAK,CAAC,KAAK;YAA7D,KAAK,gBAAL,KAAK;YAAE,OAAO,gBAAP,OAAO;YAAE,SAAS,gBAAT,SAAS;YAAE,QAAQ,gBAAR,QAAQ;;YAAK,KAAK;;AAEnD,aAAK,CAAC,gBAAgB,GAAG;AACrB,oBAAQ,EAAG,QAAQ,IAAI,IAAI,CAAC,IAAI;AAChC,qBAAS,EAAE,SAAS,IAAI,IAAI,CAAC,IAAI;SACpC,CAAC;;AAEF,eAAO,CAAC,SAAS,GAAG,KAAK,CAAC;;AAE1B,aAAK,CAAC,UAAU,GAAG,iBAAiB,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;;AAEzD,eAAO;AACH,iBAAK,EAAE,KAAK;AACZ,iBAAK,EAAE,KAAK,CAAC,UAAU,CAAC,MAAM;SACjC,CAAC;KACL;;AAED,QAAI,EAAE,gBAAY;AACd,YAAI,KAAK,GAAG,IAAI;YACZ,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC;;;AAG3B,YAAI,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,IAAI,IAAK,GAAG,CAAC,YAAY,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,AAAC,EAAE;AACvG,mBAAO;SACV;;AAED,WAAG,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;AAE9C,aAAK,CAAC,kBAAkB,EAAE,CAAC;AAC3B,aAAK,CAAC,iBAAiB,EAAE,CAAC;AAC1B,aAAK,CAAC,oBAAoB,EAAE,CAAC;;AAE7B,aAAK,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;KAChC;;AAED,wBAAoB,EAAE,gCAAY;AAC9B,YAAI,KAAK,GAAG,IAAI;YACZ,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC;;AAE3B,YAAI,CAAC,GAAG,CAAC,OAAO,EAAE;AACd,mBAAO;SACV;;AAED,WAAG,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CACvC,GAAG,CAAC,kBAAkB,EACtB,GAAG,CAAC,mBAAmB,EACvB,GAAG,CAAC,0BAA0B,EAC9B,GAAG,CAAC,SAAS,CAChB,CAAC;KACL;;AAED,qBAAiB,EAAE,6BAAY;AAC3B,YAAI,KAAK,GAAG,IAAI;YACZ,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC;;AAE3B,YAAI,CAAC,GAAG,CAAC,IAAI,EAAE;AACX,mBAAO;SACV;;AAED,WAAG,CAAC,aAAa,GAAG,IAAI,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACvD,WAAG,CAAC,MAAM,GAAG,GAAG,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;AAC3C,WAAG,CAAC,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;AACrC,WAAG,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KACjD;;AAED,sBAAkB,EAAE,8BAAY;AAC5B,YAAI,KAAK,GAAG,IAAI;YACZ,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC;;AAE3B,YAAI,CAAC,GAAG,CAAC,KAAK,EAAE;AACZ,mBAAO;SACV;;;;AAID,YAAI;AACA,eAAG,CAAC,cAAc,GAAG,IAAI,cAAc,CACnC,IAAI,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,eAAe,CAAC,EACzD,GAAG,CAAC,SAAS,CAChB,CAAC;SACL,CAAC,OAAO,EAAE,EAAE;AACT,kBAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;SAC3E;KACJ;;AAED,aAAS,EAAE,mBAAU,KAAK,EAAE;AACxB,YAAI,KAAK,GAAG,IAAI;YACZ,GAAG,GAAG,KAAK,CAAC,UAAU;YACtB,QAAQ,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC;;;AAG5C,YAAI,QAAQ,KAAK,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,UAAU,CAAC,EAAE;AACzF,eAAG,CAAC,SAAS,GAAG,IAAI,CAAC;SACxB,MAAM;AACH,eAAG,CAAC,SAAS,GAAG,KAAK,CAAC;SACzB;AACD,aAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;KAC3C;;AAED,YAAQ,EAAE,kBAAU,KAAK,EAAE;AACvB,YAAI,KAAK,GAAG,IAAI;YAAE,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC;;AAEzC,aAAK,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;AAElC,YAAI,GAAG,CAAC,OAAO,EAAE;AACb,iBAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,gBAAgB,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACxE,MAAM;AACH,iBAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;SAC3F;AACD,aAAK,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;;AAEhC,aAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KAC1C;;AAED,WAAO,EAAE,iBAAU,KAAK,EAAE;AACtB,YAAI,KAAK,GAAG,IAAI;YAAE,GAAG,GAAG,KAAK,CAAC,UAAU;YACpC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;;;;;;;AAOtB,YAAI,CAAC,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,UAAU,CAAC,EAAE;AACpG,iBAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACjD;;;AAGD,YAAI,GAAG,CAAC,KAAK,EAAE;AACX,eAAG,CAAC,MAAM,GAAG,GAAG,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC9C,iBAAK,CAAC,gBAAgB,EAAE,CAAC;;AAEzB,mBAAO;SACV;;;AAGD,YAAI,GAAG,CAAC,OAAO,EAAE;AACb,eAAG,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC7D,iBAAK,CAAC,gBAAgB,EAAE,CAAC;;AAEzB,mBAAO;SACV;;;AAGD,YAAI,GAAG,CAAC,IAAI,EAAE;AACV,iBAAK,GAAG,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SACrD;;;AAGD,aAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;;;AAGnE,aAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC;;;AAGzE,aAAK,GAAG,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC;;;AAG9D,aAAK,GAAG,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC;AACpD,aAAK,GAAG,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC;;;AAGpD,YAAI,GAAG,CAAC,MAAM,EAAE;AACZ,iBAAK,GAAG,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;;;AAG3B,gBAAI,GAAG,CAAC,YAAY,KAAK,CAAC,EAAE;AACxB,mBAAG,CAAC,MAAM,GAAG,KAAK,CAAC;AACnB,qBAAK,CAAC,gBAAgB,EAAE,CAAC;;AAEzB,uBAAO;aACV;SACJ;;;AAGD,YAAI,GAAG,CAAC,UAAU,EAAE;AAChB,iBAAK,CAAC,4BAA4B,CAAC,KAAK,CAAC,CAAC;SAC7C;;;AAGD,aAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC;;;AAG3C,WAAG,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;;;;AAIxG,YAAI,IAAI,KAAK,GAAG,CAAC,MAAM,IAAI,IAAI,KAAK,GAAG,CAAC,MAAM,EAAE;AAC5C,mBAAO;SACV;;AAED,aAAK,CAAC,gBAAgB,EAAE,CAAC;KAC5B;;AAED,gCAA4B,EAAE,sCAAU,KAAK,EAAE;AAC3C,YAAI,KAAK,GAAG,IAAI;YAAE,GAAG,GAAG,KAAK,CAAC,UAAU;YACpC,cAAc,CAAC;;;AAGnB,YAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE;AACxD,mBAAO;SACV;;AAED,sBAAc,GAAG,kBAAkB,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,oBAAoB,CAAC,CAAC;;AAE7E,WAAG,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC;AACnC,WAAG,CAAC,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;AACrC,WAAG,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;;AAG9C,YAAI,GAAG,CAAC,cAAc,KAAK,cAAc,CAAC,IAAI,EAAE;AAC5C,eAAG,CAAC,cAAc,GAAG,cAAc,CAAC,IAAI,CAAC;;AAEzC,eAAG,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,cAAc,CAAC,CAAC;SAC/D;KACJ;;AAED,oBAAgB,EAAE,4BAAY;AAC1B,YAAI,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,EAAC,CAAC,CAAC;KAClD;;AAED,UAAM,EAAE,kBAAY;AAChB,YAAI,KAAK,GAAG,IAAI,CAAC;;AAEjB,eACI,wCAAO,IAAI,EAAC,MAAM,IAAK,KAAK,CAAC,KAAK,CAAC,KAAK;AACjC,iBAAK,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,AAAC;AACzB,qBAAS,EAAE,KAAK,CAAC,SAAS,AAAC;AAC3B,oBAAQ,EAAE,KAAK,CAAC,QAAQ,AAAC,IAAE,CACpC;KACL;CACJ,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC","file":"cleave-react.js","sourcesContent":["'use strict';\n\nvar React = require('react');\n\nvar NumeralFormatter = require('./shortcuts/NumeralFormatter');\nvar DateFormatter = require('./shortcuts/DateFormatter');\nvar PhoneFormatter = require('./shortcuts/PhoneFormatter');\nvar CreditCardDetector = require('./shortcuts/CreditCardDetector');\nvar Util = require('./utils/Util');\nvar DefaultProperties = require('./common/DefaultProperties');\n\nvar Cleave = React.createClass({\n    componentDidMount: function () {\n        this.init();\n    },\n\n    componentWillReceiveProps: function (nextProps) {\n        var owner = this,\n            phoneRegionCode = nextProps.options.phoneRegionCode,\n            newValue = nextProps.value;\n\n        if (newValue) {\n            newValue = newValue.toString();\n\n            if (newValue !== owner.properties.initValue) {\n                owner.properties.initValue = newValue;\n                owner.onInput(newValue);\n            }\n        }\n\n        // update phone region code\n        if (phoneRegionCode && phoneRegionCode !== owner.properties.phoneRegionCode) {\n            owner.properties.phoneRegionCode = phoneRegionCode;\n            owner.initPhoneFormatter();\n            owner.onInput(owner.properties.result);\n        }\n    },\n\n    getInitialState: function () {\n        var owner = this,\n            { value, options, onKeyDown, onChange, ...other } = owner.props;\n\n        owner.registeredEvents = {\n            onChange:  onChange || Util.noop,\n            onKeyDown: onKeyDown || Util.noop\n        };\n\n        options.initValue = value;\n\n        owner.properties = DefaultProperties.assign({}, options);\n\n        return {\n            other: other,\n            value: owner.properties.result\n        };\n    },\n\n    init: function () {\n        var owner = this,\n            pps = owner.properties;\n\n        // so no need for this lib at all\n        if (!pps.numeral && !pps.phone && !pps.creditCard && !pps.date && (pps.blocksLength === 0 && !pps.prefix)) {\n            return;\n        }\n\n        pps.maxLength = Util.getMaxLength(pps.blocks);\n\n        owner.initPhoneFormatter();\n        owner.initDateFormatter();\n        owner.initNumeralFormatter();\n\n        owner.onInput(pps.initValue);\n    },\n\n    initNumeralFormatter: function () {\n        var owner = this,\n            pps = owner.properties;\n\n        if (!pps.numeral) {\n            return;\n        }\n\n        pps.numeralFormatter = new NumeralFormatter(\n            pps.numeralDecimalMark,\n            pps.numeralDecimalScale,\n            pps.numeralThousandsGroupStyle,\n            pps.delimiter\n        );\n    },\n\n    initDateFormatter: function () {\n        var owner = this,\n            pps = owner.properties;\n\n        if (!pps.date) {\n            return;\n        }\n\n        pps.dateFormatter = new DateFormatter(pps.datePattern);\n        pps.blocks = pps.dateFormatter.getBlocks();\n        pps.blocksLength = pps.blocks.length;\n        pps.maxLength = Util.getMaxLength(pps.blocks);\n    },\n\n    initPhoneFormatter: function () {\n        var owner = this,\n            pps = owner.properties;\n\n        if (!pps.phone) {\n            return;\n        }\n\n        // Cleave.AsYouTypeFormatter should be provided by\n        // external google closure lib\n        try {\n            pps.phoneFormatter = new PhoneFormatter(\n                new window.Cleave.AsYouTypeFormatter(pps.phoneRegionCode),\n                pps.delimiter\n            );\n        } catch (ex) {\n            throw new Error('Please include phone-type-formatter.{country}.js lib');\n        }\n    },\n\n    onKeyDown: function (event) {\n        var owner = this,\n            pps = owner.properties,\n            charCode = event.which || event.keyCode;\n\n        // hit backspace when last character is delimiter\n        if (charCode === 8 && Util.isDelimiter(pps.result.slice(-1), pps.delimiter, pps.delimiters)) {\n            pps.backspace = true;\n        } else {\n            pps.backspace = false;\n        }\n        owner.registeredEvents.onKeyDown(event);\n    },\n\n    onChange: function (event) {\n        var owner = this, pps = owner.properties;\n\n        owner.onInput(event.target.value);\n\n        if (pps.numeral) {\n            event.target.rawValue = pps.numeralFormatter.getRawValue(pps.result);\n        } else {\n            event.target.rawValue = Util.stripDelimiters(pps.result, pps.delimiter, pps.delimiters);\n        }\n        event.target.value = pps.result;\n\n        owner.registeredEvents.onChange(event);\n    },\n\n    onInput: function (value) {\n        var owner = this, pps = owner.properties,\n            prev = pps.result;\n\n        // case 1: delete one more character \"4\"\n        // 1234*| -> hit backspace -> 123|\n        // case 2: last character is not delimiter which is:\n        // 12|34* -> hit backspace -> 1|34*\n\n        if (!pps.numeral && pps.backspace && !Util.isDelimiter(value.slice(-1), pps.delimiter, pps.delimiters)) {\n            value = Util.headStr(value, value.length - 1);\n        }\n\n        // phone formatter\n        if (pps.phone) {\n            pps.result = pps.phoneFormatter.format(value);\n            owner.updateValueState();\n\n            return;\n        }\n\n        // numeral formatter\n        if (pps.numeral) {\n            pps.result = pps.prefix + pps.numeralFormatter.format(value);\n            owner.updateValueState();\n\n            return;\n        }\n\n        // date\n        if (pps.date) {\n            value = pps.dateFormatter.getValidatedDate(value);\n        }\n\n        // strip delimiters\n        value = Util.stripDelimiters(value, pps.delimiter, pps.delimiters);\n\n        // strip prefix\n        value = Util.getPrefixStrippedValue(value, pps.prefix, pps.prefixLength);\n\n        // strip non-numeric characters\n        value = pps.numericOnly ? Util.strip(value, /[^\\d]/g) : value;\n\n        // convert case\n        value = pps.uppercase ? value.toUpperCase() : value;\n        value = pps.lowercase ? value.toLowerCase() : value;\n\n        // prefix\n        if (pps.prefix) {\n            value = pps.prefix + value;\n\n            // no blocks specified, no need to do formatting\n            if (pps.blocksLength === 0) {\n                pps.result = value;\n                owner.updateValueState();\n\n                return;\n            }\n        }\n\n        // update credit card props\n        if (pps.creditCard) {\n            owner.updateCreditCardPropsByValue(value);\n        }\n\n        // strip over length characters\n        value = Util.headStr(value, pps.maxLength);\n\n        // apply blocks\n        pps.result = Util.getFormattedValue(value, pps.blocks, pps.blocksLength, pps.delimiter, pps.delimiters);\n\n        // nothing changed\n        // prevent update value to avoid caret position change\n        if (prev === pps.result && prev !== pps.prefix) {\n            return;\n        }\n\n        owner.updateValueState();\n    },\n\n    updateCreditCardPropsByValue: function (value) {\n        var owner = this, pps = owner.properties,\n            creditCardInfo;\n\n        // At least one of the first 4 characters has changed\n        if (Util.headStr(pps.result, 4) === Util.headStr(value, 4)) {\n            return;\n        }\n\n        creditCardInfo = CreditCardDetector.getInfo(value, pps.creditCardStrictMode);\n\n        pps.blocks = creditCardInfo.blocks;\n        pps.blocksLength = pps.blocks.length;\n        pps.maxLength = Util.getMaxLength(pps.blocks);\n\n        // credit card type changed\n        if (pps.creditCardType !== creditCardInfo.type) {\n            pps.creditCardType = creditCardInfo.type;\n\n            pps.onCreditCardTypeChanged.call(owner, pps.creditCardType);\n        }\n    },\n\n    updateValueState: function () {\n        this.setState({value: this.properties.result});\n    },\n\n    render: function () {\n        var owner = this;\n\n        return (\n            <input type=\"text\" {...owner.state.other}\n                   value={owner.state.value}\n                   onKeyDown={owner.onKeyDown}\n                   onChange={owner.onChange}/>\n        );\n    }\n});\n\nmodule.exports = window.Cleave = Cleave;\n"]}