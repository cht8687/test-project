{"version":3,"sources":["../../../src/relay/relay001/index.js"],"names":["Item","item","props","store","url","title","score","by","id","Component","createContainer","fragments","QL","HackerNewsRoute","Route","routeName","queries","getFragment","injectNetworkLayer","DefaultNetworkLayer","TopItems","items","topStories","map","idx","mountNode","document","getElementById","rootComponent","render"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEMA,I;;;;;;;;;;;6BACK;AACP,UAAIC,OAAO,KAAKC,KAAL,CAAWC,KAAtB;;AAEA,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAI;AAAA;AAAA,cAAG,MAAMF,KAAKG,GAAd;AAAoBH,iBAAKI;AAAzB;AAAJ,SADF;AAEE;AAAA;AAAA;AAAKJ,eAAKK,KAAV;AAAA;AAAoBL,eAAKM,EAAL,CAAQC;AAA5B,SAFF;AAGE;AAHF,OADF;AAOD;;;;EAXgB,gBAAMC,S;;AAYxB;;AAEDT,OAAO,qBAAMU,eAAN,CAAsBV,IAAtB,EAA4B;AACjCW,aAAW;AACTR,WAAO;AAAA,aAAM,qBAAMS,EAAZ;AAAA;AADE;AADsB,CAA5B,CAAP;;IAgBMC,e;;;;;;;;;;EAAwB,qBAAMC,K;;AAA9BD,e,CACGE,S,GAAY,iB;AADfF,e,CAEGG,O,GAAU;AACfb,SAAQ,eAACM,SAAD,EAAe;AACrB;AACA,WAAO,qBAAMG,EAAb,mBAESH,UAAUQ,WAAV,CAAsB,OAAtB,CAFT;AAIA;AAPa,C;;;AAWnB,qBAAMC,kBAAN,CACE,IAAI,qBAAMC,mBAAV,CAA8B,mCAA9B,CADF;;IAMMC,Q;;;;;;;;;;;6BACK;AACP,UAAIC,QAAQ,KAAKnB,KAAL,CAAWC,KAAX,CAAiBmB,UAAjB,CAA4BC,GAA5B,CACV,UAACpB,KAAD,EAAQqB,GAAR;AAAA,eAAgB,8BAAC,IAAD,IAAM,OAAOrB,KAAb,EAAoB,KAAKqB,GAAzB,GAAhB;AAAA,OADU,CAAZ;AAGA,aAAO;AAAA;AAAA;AACHH;AADG,OAAP;AAGD;;;;EARoB,gBAAMZ,S;;AAW7BW,WAAW,qBAAMV,eAAN,CAAsBU,QAAtB,EAAgC;AACzCT,aAAW;AACTR,WAAO;AAAA,aAAM,qBAAMS,EAAZ,mBAEYZ,KAAKiB,WAAL,CAAiB,OAAjB,CAFZ;AAAA;AADE;AAD8B,CAAhC,CAAX;;AAYA,IAAIQ,YAAYC,SAASC,cAAT,CAAwB,WAAxB,CAAhB;AACA,IAAIC,gBAAgB,mDAAO,aAAP;AAClB,aAAWR,QADO;AAElB,SAAO,IAAIP,eAAJ,EAFW,GAApB;AAGA,mBAASgB,MAAT,CAAgBD,aAAhB,EAA+BH,SAA/B","file":"index.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Relay from 'react-relay';\n\nclass Item extends React.Component {\n  render() {\n    let item = this.props.store;\n\n    return (\n      <div>\n        <h1><a href={item.url}>{item.title}</a></h1>\n        <h2>{item.score} - {item.by.id}</h2>\n        <hr />\n      </div>\n    );\n  }\n};\n\nItem = Relay.createContainer(Item, {\n  fragments: {\n    store: () => Relay.QL`\n      fragment on HackerNewsItem {\n        id\n        title,\n        score,\n        url\n        by {\n          id\n        }\n      }\n    `,\n  },\n});\n\nclass HackerNewsRoute extends Relay.Route {\n  static routeName = 'HackerNewsRoute';\n  static queries = {\n    store: ((Component) => {\n      // Component is our Item\n      return Relay.QL`\n      query root {\n        hn { ${Component.getFragment('store')} },\n      }\n    `}),\n  };\n}\n\nRelay.injectNetworkLayer(\n  new Relay.DefaultNetworkLayer('http://www.GraphQLHub.com/graphql')\n);\n\n\n\nclass TopItems extends React.Component {\n  render() {\n    let items = this.props.store.topStories.map(\n      (store, idx) => <Item store={store} key={idx} />\n    );\n    return <div>\n      { items }\n    </div>;\n  }\n}\n\nTopItems = Relay.createContainer(TopItems, {\n  fragments: {\n    store: () => Relay.QL`\n      fragment on HackerNewsAPI {\n        topStories { ${Item.getFragment('store')} },\n      }\n    `,\n  },\n});\n\n\n\nlet mountNode = document.getElementById('container');\nlet rootComponent = <Relay.RootContainer\n  Component={TopItems}\n  route={new HackerNewsRoute()} />;\nReactDOM.render(rootComponent, mountNode);\n"]}